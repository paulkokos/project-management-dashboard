apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: project-dashboard
  labels:
    app: backend
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      imagePullSecrets:
        - name: docker-registry
      containers:
        - name: backend
          image: paulkokos/project-dashboard-backend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
          envFrom:
            - configMapRef:
                name: app-config
            - secretRef:
                name: app-secrets
          env:
            - name: DB_HOST
              value: postgres
            - name: REDIS_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: REDIS_URL
          livenessProbe:
            httpGet:
              path: /api/health/
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/health/
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: static
              mountPath: /app/staticfiles
            - name: media
              mountPath: /app/media
      initContainers:
        - name: migrate
          image: paulkokos/project-dashboard-backend:latest
          imagePullPolicy: IfNotPresent
          command: ["python", "manage.py", "migrate"]
          envFrom:
            - configMapRef:
                name: app-config
            - secretRef:
                name: app-secrets
          env:
            - name: DB_HOST
              value: postgres
      volumes:
        - name: static
          emptyDir: {}
        - name: media
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: project-dashboard
spec:
  selector:
    app: backend
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 8000
      targetPort: 8000
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: project-dashboard
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
