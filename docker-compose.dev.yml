version: '3.9'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: project_dashboard_db_dev
    environment:
      POSTGRES_DB: ${DB_NAME:-project_management_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network_dev

  # Redis Cache & Message Broker
  redis:
    image: redis:7-alpine
    container_name: project_dashboard_redis_dev
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data_dev:/data
    networks:
      - app_network_dev

  # Django Backend (Development)
  backend:
    build:
      context: .
      dockerfile: deployment/docker/Dockerfile.backend.dev
    container_name: project_dashboard_backend_dev
    environment:
      DEBUG: ${DEBUG:-True}
      SECRET_KEY: ${SECRET_KEY:-django-insecure-dev-key}
      ALLOWED_HOSTS: localhost,127.0.0.1,backend
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: ${DB_NAME:-project_management_db}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_HOST: db
      DB_PORT: 5432
      REDIS_URL: redis://redis:6379/0
      REDIS_CACHE_URL: redis://redis:6379/1
      CELERY_BROKER_URL: redis://redis:6379/0
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:8000,http://localhost:5173,http://frontend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py makemigrations --noinput &&
             python manage.py migrate &&
             python manage.py seed_database &&
             daphne -b 0.0.0.0 -p 8000 config.asgi:application"
    networks:
      - app_network_dev

  # React Frontend (Development)
  frontend:
    build:
      context: .
      dockerfile: deployment/docker/Dockerfile.frontend.dev
    container_name: project_dashboard_frontend_dev
    ports:
      - "5173:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      VITE_API_BASE_URL: http://localhost:8000/api
      VITE_WS_URL: http://localhost:8000
    depends_on:
      - backend
    networks:
      - app_network_dev

networks:
  app_network_dev:
    driver: bridge

volumes:
  postgres_data_dev:
  redis_data_dev:
